/*
* This header is generated by classdump-dyld 0.7
* on Thursday, November 19, 2015 at 10:15:03 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/assistantd-Structs.h>
#import <assistantd/ADSiriConnectionDelegate.h>
#import <assistantd/ADAssistantDataManagerObserver.h>
#import <assistantd/ADNetworkManagerDelegate.h>

@protocol OS_dispatch_queue, ADSiriConnection, OS_dispatch_source, ADSessionDelegate;
@class NSObject, ADAccount, NSString, NSMutableArray, NSMutableSet, ADConnectionType, ADAuthenticator, ADNetworkManager, NSError, AFAggregator, SASetAssistantData, NSURL;

@interface ADSession : NSObject <ADSiriConnectionDelegate, ADAssistantDataManagerObserver, ADNetworkManagerDelegate> {

	NSObject*<OS_dispatch_queue> _queue;
	ADAccount* _account;
	NSString* _sessionInitCommandId;
	NSString* _createSessionInfoRequestId;
	NSString* _pendingAssistantDataAnchor;
	NSMutableArray* _pendingCommands;
	NSMutableSet* _limboIds;
	NSMutableArray* _sendBuffer;
	id<ADSiriConnection> _serverConnection;
	ADConnectionType* _currentConnectionType;
	int _state;
	CFDictionaryRef _commandMap;
	double _loadRetryStartTime;
	ADAuthenticator* _authenticator;
	ADNetworkManager* _networkManager;
	NSObject*<OS_dispatch_source> _sessionLoadTimerSource;
	id<ADSessionDelegate> _delegate;
	char _shouldSendAssistantData;
	char _isRegisteredForSessionDestroyingNotifications;
	NSMutableArray* _cachedLockRestrictions;
	unsigned _ioConnect;
	IONotificationPortRef _ioNotificationPortRef;
	unsigned _ioNotifier;
	char _usingCachedCertificateData;
	char _usingCachedValidationData;
	char _forceValidationRefresh;
	char _hasActiveRequest;
	char _checkForWiFiTransitionOnRequestEnd;
	char _prefersWWAN;
	char _skipPeer;
	NSError* _skipPeerError;
	char _isAttemptingRetry;
	double _requestStartTime;
	double _lastRetryTime;
	AFAggregator* _aggregator;
	char _assistantDataRequested;
	SASetAssistantData* _cachedAssistantData;
	NSString* _assistantDataRefId;
	NSString* _languageCode;
	NSString* _connectionMode;
	NSURL* _currentConnectionURL;
	char _dormant;
	NSMutableArray* _dormantQueue;

}

@property (assign,nonatomic,__weak) id<ADSessionDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)eagerlyFetchAssistantData;
-(void)preheatAndMakeQuiet:(char)arg1 ;
-(id)initOnQueue:(id)arg1 withAccount:(id)arg2 ;
-(void)beginUpdatingAssistantData;
-(void)sendCommand:(id)arg1 opportunistically:(char)arg2 ;
-(void)setDormant:(char)arg1 ;
-(void)getConnectionMetrics:(/*^block*/id)arg1 ;
-(void)handleCommand:(id)arg1 ;
-(void)refreshValidationData;
-(void)cancelSynchronously;
-(void)_unregisterForPossibleSessionDestroyingNotifications;
-(void)_unregisterForSleepNotification;
-(id)_connectionURL;
-(void)_resetServerConnectionSynchronously:(char)arg1 completion:(/*^block*/id)arg2 ;
-(id)_networkManager;
-(void)_analyzeRequestFailureWithAceConnectionAnalysisInfo:(id)arg1 ;
-(void)_analyzeFailureWithAceConnectionAnalysisInfo:(id)arg1 ;
-(void)_languageCodeChanged:(id)arg1 ;
-(void)_enabledBitsChanged:(id)arg1 ;
-(void)_resetServerConnection;
-(id)_generateAnalyticsContextWithError:(id)arg1 ;
-(id)_pendingCommands;
-(void)_sendServerCommand:(id)arg1 ;
-(void)_addLimboId:(id)arg1 ;
-(void)_addPendingCommand:(id)arg1 ;
-(void)_clearSendBuffer;
-(void)_clearLimbo;
-(void)_reallyRetryPreferringWWAN:(char)arg1 skipPeer:(char)arg2 skipPeerError:(id)arg3 ;
-(void)_cancelSessionLoadTimeout;
-(id)_saConnectionMode;
-(id)_saConnectionType;
-(void)_scheduleSessionLoadTimeout;
-(id)_authenticator;
-(void)_informDelegateOfError:(id)arg1 ;
-(void)_continueSessionInitWithValidationData:(id)arg1 ;
-(void)_setCachedServerCertificate:(id)arg1 ;
-(void)_continueAuthWithCertificateData:(id)arg1 ;
-(void)_continueAuthentication;
-(id)_authDataToSign;
-(void)_setCachedValidationData:(id)arg1 withDuration:(double)arg2 ;
-(void)_analyzeRetrySuccessWithAceConnectionAnalysisInfo:(id)arg1 ;
-(char)_waitingForAssistantData;
-(char)_shouldSendAssistantData;
-(void)_sendAssistantDataChangedSinceAnchor:(id)arg1 refId:(id)arg2 ;
-(void)_assistantFailedForReason:(id)arg1 error:(id)arg2 ;
-(char)_refIdIsLimboId:(id)arg1 ;
-(void)_removeLimboId:(id)arg1 ;
-(void)_passObjectToDelegate:(id)arg1 ;
-(void)_saGetSessionCertificateResponse:(id)arg1 ;
-(void)_saCreateSessionInfoResponse:(id)arg1 ;
-(void)_saSessionValidationFailed:(id)arg1 ;
-(void)_saAssistantCreated:(id)arg1 ;
-(void)_saAssistantLoaded:(id)arg1 ;
-(void)_saAssistantDestroyed:(id)arg1 ;
-(void)_saAssistantNotFound:(id)arg1 ;
-(void)_saAssistantNotReady:(id)arg1 ;
-(void)_saSetConnectionHeader:(id)arg1 ;
-(void)_saGetAssistantData:(id)arg1 ;
-(void)_saPing:(id)arg1 ;
-(void)_saCommandFailed:(id)arg1 ;
-(void)_setSessionOpened;
-(void)_sendLoadAssistantWithAccount:(id)arg1 validationData:(id)arg2 ;
-(void)_sendCreateAssistantWithAccount:(id)arg1 validationData:(id)arg2 ;
-(void)_sendDestroyAssistant;
-(void)_sendPendingCommands;
-(id)_cachedServerCertificate;
-(void)_sendGetSessionCertificateData;
-(void)_sendCreateSessionInfoRequestWithData:(id)arg1 ;
-(char)_authenticationDisabled;
-(id)_cachedValidationData;
-(void)_startSession;
-(void)_registerForPossibleSessionDestroyingNotifications;
-(void)_eagerAuthDidComplete;
-(void)_startConnectionPreferringWWAN:(char)arg1 skipPeer:(char)arg2 skipPeerError:(id)arg3 ;
-(void)_registerForSleepNotification;
-(void)_connectionOpened;
-(void)_handleAceObject:(id)arg1 ;
-(void)_siriConnection:(id)arg1 didEncounterError:(id)arg2 analysisInfo:(id)arg3 ;
-(char)_connectionErrorIsTimeout:(id)arg1 ;
-(char)_connectionErrorSuggestsConnectionPolicyReset:(id)arg1 ;
-(char)_connectionErrorIsRedirect:(id)arg1 ;
-(char)_shouldRetry;
-(void)_retryForFailedConnection:(id)arg1 withType:(id)arg2 onError:(id)arg3 ;
-(void)_informDelegateWillRetryOnError:(id)arg1 ;
-(void)_analyzeFailureWithNonRetriedAceConnectionAnalysisInfo:(id)arg1 error:(id)arg2 ;
-(char)_connectionIsWWAN;
-(void)_sendPendingDormantCommands;
-(void)_setDormantWithStyle:(int)arg1 ;
-(void)_pendDormantCommand:(id)arg1 ;
-(id)_sendBuffer;
-(void)_sendLimboCommand:(id)arg1 ;
-(void)_recheckForWiFiTransition;
-(void)siriConnection:(id)arg1 willStartWithConnectionType:(id)arg2 ;
-(void)siriConnection:(id)arg1 didOpenWithConnectionType:(id)arg2 routeId:(id)arg3 delay:(double)arg4 ;
-(void)siriConnection:(id)arg1 didReceiveAceObject:(id)arg2 ;
-(void)siriConnectionDidClose:(id)arg1 ;
-(void)siriConnection:(id)arg1 didEncounterError:(id)arg2 analysisInfo:(id)arg3 ;
-(void)assistantDataManager:(id)arg1 didUpdateAssistantData:(id)arg2 ;
-(void)networkManagerNonWWANDidBecomeAvailable:(id)arg1 ;
-(void)networkManagerLostNonWWANConnectivity:(id)arg1 ;
-(void)_powerChangedMessageType:(unsigned)arg1 notificationID:(long)arg2 ;
-(void)_sendCommandFailedWithRefId:(id)arg1 ;
-(char)hasLoadedAssistant;
-(void)_cancelSynchronously:(char)arg1 ;
-(void)cancel;
-(void)setDelegate:(id<ADSessionDelegate>)arg1 ;
-(void)dealloc;
-(id<ADSessionDelegate>)delegate;
-(void)setHasActiveRequest:(char)arg1 ;
-(void)resetConnection;
-(id)_serverConnection;
-(id)aggregator;
-(void)_startConnection;
-(void)_authenticationFailed;
-(id)_languageCode;
@end

